<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Past Transcripts</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }

        body {
            background-color: #f5f7fb;
            color: #1a1a1a;
            line-height: 1.6;
            padding: 2rem;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            margin-bottom: 2rem;
        }

        .header h1 {
            font-size: 2rem;
            color: #1a1a1a;
            margin-bottom: 0.5rem;
        }

        .header p {
            color: #666;
        }

        .transcripts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .transcript-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .transcript-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .transcript-date {
            font-size: 0.875rem;
            color: #666;
            margin-bottom: 0.5rem;
        }

        .transcript-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 1rem;
        }

        .transcript-summary {
            color: #4a4a4a;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .transcript-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.875rem;
            color: #666;
        }

        .transcript-duration {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .transcript-duration i {
            font-size: 1rem;
        }

        .no-transcripts {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .no-transcripts h2 {
            color: #666;
            margin-bottom: 1rem;
        }

        .loading {
            text-align: center;
            padding: 2rem;
            color: #666;
        }

        .error {
            text-align: center;
            padding: 2rem;
            color: #dc3545;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Past Transcripts</h1>
            <p>View and manage your meeting transcripts</p>
        </div>

        <div id="transcriptsContainer">
            <div class="loading">Loading transcripts...</div>
        </div>
    </div>

    <script>
        // Format date to DD/MM/YYYY
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-GB', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric'
            });
        }

        // Format duration to HH:MM:SS
        function formatDuration(seconds) {
            const hours = Math.floor(seconds / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const remainingSeconds = seconds % 60;

            return [hours, minutes, remainingSeconds]
                .map(val => val.toString().padStart(2, '0'))
                .join(':');
        }

        // Load transcripts
        async function loadTranscripts() {
            const container = document.getElementById('transcriptsContainer');
            
            try {
                const response = await fetch('/api/transcripts', {
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('supabase.auth.token')}`
                    }
                });

                if (!response.ok) {
                    throw new Error('Failed to fetch transcripts');
                }

                const transcripts = await response.json();

                if (transcripts.length === 0) {
                    container.innerHTML = `
                        <div class="no-transcripts">
                            <h2>No transcripts found</h2>
                            <p>Your meeting transcripts will appear here</p>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = `
                    <div class="transcripts-grid">
                        ${transcripts.map(transcript => `
                            <div class="transcript-card">
                                <div class="transcript-date">${formatDate(transcript.created_at)}</div>
                                <h3 class="transcript-title">${transcript.title}</h3>
                                <p class="transcript-summary">${transcript.summary || 'No summary available'}</p>
                                <div class="transcript-meta">
                                    <div class="transcript-duration">
                                        <i class="fas fa-clock"></i>
                                        ${formatDuration(transcript.duration)}
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                `;
            } catch (error) {
                console.error('Error loading transcripts:', error);
                container.innerHTML = `
                    <div class="error">
                        <h2>Error loading transcripts</h2>
                        <p>${error.message}</p>
                    </div>
                `;
            }
        }

        // Load transcripts when page loads
        document.addEventListener('DOMContentLoaded', loadTranscripts);
    </script>
</body>
</html> 